{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Main","useParams","name","number","className","split","map","e","num","BoxNumber","useState","open","setOpen","onClick","App","path","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+OAkBA,IAAMA,EAAO,WAAO,IAAD,EACKC,cAAjBC,EADY,EACZA,KAAMC,EADM,EACNA,OAEZ,OACC,gCACC,sBAAKC,UAAU,OAAf,cAAwBF,KACxB,qBAAKE,UAAU,mBAAf,SACED,EAAOE,MAAM,IAAIC,KAAI,SAACC,GACtB,OAAO,cAAC,EAAD,CAAWC,IAAKD,SAGzB,qBAAKH,UAAU,SAAf,qCAKGK,EAAY,SAAC,GAAa,IAAXD,EAAU,EAAVA,IAAU,EACNE,oBAAS,GADH,mBACvBC,EADuB,KACjBC,EADiB,KAK9B,OACC,qBAAKC,QAJc,WACnBD,GAAQ,IAGmBR,UAAU,SAArC,SACEO,GAAQH,KAKGM,EAzCf,WACC,OACC,cAAC,IAAD,CAAQV,UAAU,MAAlB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,CACCW,KAAK,kBACLC,OAAQ,SAACC,GAAD,OAAW,cAAC,EAAD,eAAUA,YCCnBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.47ca1438.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n\treturn (\n\t\t<Router className='App'>\n\t\t\t<Switch>\n\t\t\t\t<Route\n\t\t\t\t\tpath='/:name/:number?'\n\t\t\t\t\trender={(props) => <Main {...props} />}\n\t\t\t\t></Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nconst Main = () => {\n\tlet { name, number } = useParams();\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='name'> {name}</div>\n\t\t\t<div className='number_container'>\n\t\t\t\t{number.split('').map((e) => {\n\t\t\t\t\treturn <BoxNumber num={e}></BoxNumber>;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div className='footer'>powered by eXit-Guy</div>\n\t\t</div>\n\t);\n};\n\nconst BoxNumber = ({ num }) => {\n\tconst [open, setOpen] = useState(false);\n\tconst clickHandle = () => {\n\t\tsetOpen(true);\n\t};\n\treturn (\n\t\t<div onClick={clickHandle} className='number'>\n\t\t\t{open && num}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}